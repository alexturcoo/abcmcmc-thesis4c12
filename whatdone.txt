##This file will record things I have done for my thesis so far##
##I am learning c/c++ for my thesis to run an ABC-MCMC

1. Created function which takes an integer value and generates a
random amino acid sequence of that length (I used the string class
from c++ for this part)

std::string createSeq(int n){

    char aminoAcids[numAA] = { AMINO ACID SYMBOLS };

    std::string protein = "";
    for (int i = 0; i < n; i++){
        protein =  protein + aminoAcids[rand() % numAA];}

    std::cout << protein << "\n" << "\n" ;
    //printf("%s", protien.c_str());
    return protein;
}

2. The second function I began working on reads in the SRP40
protein which acts as the data that is already known, and it
creates a vector with characteristics like the length of the
sequence, the number of LCR's in the sequence, average entropy of
the LCRs - we must use segA to determine these characteristics.
- in C, we need to figure out how to call segA and record the value
  of the output and manipulate the value of the output as well (SEP
19 2022)
- I have created a symbolic link to the program segA and I will use
  that when I call segA from c/c++. (SEP 19 2022)
- Converted srp40 protein string into fasta file, fed that fasta file to segA, figured out how many low complexity regions are in the srp40 protien sequence (SEP 20 2022) 

int og_protein(){

    std::string srp40 = "MASKKIKVDEVPKLSVKEKEIEEKSSSSSSSSSSSSSSSSSSSSSSSSSGESSSSSSSSSSSSSSDSSDS\
SDSESSSSSSSSSSSSSSSSDSESSSESDSSSSGSSSSSSSSSDESSSESESEDETKKRARESDNEDAKE\
TKKAKTEPESSSSSESSSSGSSSSSESESGSESDSDSSSSSSSSSDSESDSESDSQSSSSSSSSDSSSDS\
DSSSSDSSSDSDSSSSSSSSSSDSDSDSDSSSDSDSSGSSDSSSSSDSSSDESTSSDSSDSDSDSDSGSS\
SELETKEATADESKAEETPASSNESTPSASSSSSANKLNIPAGTDEIKEGQRKHFSRVDRSKINFEAWEL\
TDNTYKGAAGTWGEKANEKLGRVRGKDFTKNKNKMKRGSYRGGSITLESGSYKFQD";

    //creating fasta file of protein string to use in segA
    std::ofstream MyFile("srp40.fasta"); //Create and open a fasta file
    MyFile << ">srp40_saccharomyces_cerevisiae\n" << srp40; //Write to the file
    MyFile.close(); //Close the file

    //getting the characteristics of the sequence
    int length = srp40.length();
    system("segA srp40.fasta 15 1.9 2.2 -l | grep '>' | wc -l >> numlcr.txt"); //Write the results of counting the LCRs to a txt file
    std::ifstream myreadfile("numlcr.txt"); //Declaring fstream variable and connecting it to a stream object by opening the file
    int num_lcr; //Declare int variable which holds the contents of the 'numlcr.txt' file
    myreadfile >> num_lcr; //Pipe file's content into stream
    //int avg_entropy_lcr =

    std::cout << srp40 << "\n" << "\n" << length << "\n" << "\n"<< num_lcr << "\n" ;
    return 0;
}

3. I created a repository on github so I could work both from home
and from the lab and push changes on both different devices (SEP 19
2022)
- always need to remember to push the changes from where I am
  working - once segA is involved, the code will only work when
running on the server
